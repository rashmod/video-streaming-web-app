version: '3'

services:
    zookeeper:
        image: zookeeper

    kafka:
        image: confluentinc/cp-kafka
        ports:
            - '9092:9092'
            - '29092:29092'
        environment:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            - zookeeper

    kafka-admin:
        build: ./backend/kafka
        depends_on:
            - kafka
        restart: on-failure:10

    postgres:
        image: postgres
        ports:
            - '5432:5432'
        env_file:
            - ./backend/user_service/.env

    # frontend:
    #     build: ./frontend
    #     ports:
    #         - '5173:5173'
    #     env_file:
    #         - ./frontend/.env

    # upload-service:
    #     build: ./backend/upload_service
    #     ports:
    #         - '3000:3000'
    #     depends_on:
    #         - kafka-admin
    #     env_file:
    #         - ./backend/upload_service/.env
    #     restart: on-failure:10

    # watch-service:
    #     build: ./backend/watch_service
    #     ports:
    #         - '3001:3001'
    #     depends_on:
    #         - kafka-admin
    #     env_file:
    #         - ./backend/watch_service/.env
    #     restart: on-failure:10

    transcode-service:
        build: ./backend/transcode_service
        env_file:
            - ./backend/transcode_service/.env
        volumes:
            - ./backend/transcode_service:/app
            - /app/node_modules
        depends_on:
            - kafka-admin
        restart: on-failure:10
        entrypoint: ['wait-for-entrypoint.sh', 'kafka', 'npm', 'run', 'dev']
